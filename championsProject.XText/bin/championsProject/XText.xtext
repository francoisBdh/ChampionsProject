// automatically generated by Xtext
grammar championsProject.XText with org.eclipse.xtext.common.Terminals

import "http://www.example.org/championsProject" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Fifa returns Fifa:
	'Fifa'
	'{'
		country+=Country( "," country+=Country)*
//		'country' '{' country+=Country ( "," country+=Country)* '}'
	'}';



Person returns Person:
	Player | President | Coach | Agent;


Country returns Country:
	{Country}
	// 'Country'
	name=EString
	//{
	'{'
		competition+=Competition( "," competition+=Competition)*
	//}
	'}';

EString returns ecore::EString:
	STRING | ID;

Competition returns Competition:
//	'Competition'
	name=EString
	'{'
		('type' type=CompetitionType)?
		'trophy' trophy=Trophy
		'team' '{' team+=Team ( "," team+=Team)* '}' 
	'}';

Trophy returns Trophy:
//	'Trophy'
	name=EString
	'{'
		('team' '(' team+=[Team|EString] ( "," team+=[Team|EString])* ')' )?
	'}';

enum CompetitionType returns CompetitionType:
				championship = 'championship' | cup = 'cup' | worldCup = 'worldCup';

Team returns Team:
//	'Team'
	name=EString
	'{'
		('type' type=TeamType)?
		'stadium' stadium=Stadium
		('trophy' '(' trophy+=[Trophy|EString] ( "," trophy+=[Trophy|EString])* ')' )?
		'president' ":" president=President
		'coach' ":" coach=Coach
		'player' ":" player+=Player ( "," player+=Player)* 
	'}';

Stadium returns Stadium:
	{Stadium}
//	'Stadium'
	name=EString
	'{'
		('capacity' capacity=EInt)?
	'}';

enum TeamType returns TeamType:
				town = 'town' | national = 'national';

President returns President:
	{President}
	'President'
	name=EString
	'{'
		('age' age=EInt)?
	'}';

Coach returns Coach:
	{Coach}
	'Coach'
	name=EString
	'{'
		('age' age=EInt)?
		('contrat' contrat=EInt)?
		('agent' agent=[Agent|EString])?
	'}';

Player returns Player:
	{Player}
	'Player'
	name=EString
	'{'
		('age' age=EInt)?
		('position' position=PlayerPosition)?
		('status' status=PlayerStatus)?
		('contrat' contrat=EInt)?
		('agent' agent=[Agent|EString])?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

Agent returns Agent:
	{Agent}
	'Agent'
	name=EString
	'{'
		('age' age=EInt)?
		('player' '(' player+=[Player|EString] ( "," player+=[Player|EString])* ')' )?
		('coach' '(' coach+=[Coach|EString] ( "," coach+=[Coach|EString])* ')' )?
	'}';

enum PlayerPosition returns PlayerPosition:
				centralMidfielder = 'centralMidfielder' | centralBack = 'centralBack' | goalKeeper = 'goalKeeper' | leftMidfielder = 'leftMidfielder' | rightMidfielder = 'rightMidfielder' | rightBack = 'rightBack' | leftBack = 'leftBack' | striker = 'striker';

enum PlayerStatus returns PlayerStatus:
				starter = 'starter' | substitute = 'substitute' | injured = 'injured' | suspended = 'suspended';
