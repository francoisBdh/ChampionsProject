/*
 * generated by Xtext 2.12.0
 */
package championsProject.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class XTextGrammarAccess extends AbstractGrammarElementFinder {
	
	public class FifaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Fifa");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFifaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCountryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCountryCountryParserRuleCall_2_0 = (RuleCall)cCountryAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCountryAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCountryCountryParserRuleCall_3_1_0 = (RuleCall)cCountryAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Fifa:
		//	'Fifa'
		//	'{'
		//	country+=Country ("," country+=Country)*
		//	//		'country' '{' country+=Country ( "," country+=Country)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Fifa' '{' country+=Country ("," country+=Country)* //		'country' '{' country+=Country ( "," country+=Country)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Fifa'
		public Keyword getFifaKeyword_0() { return cFifaKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//country+=Country
		public Assignment getCountryAssignment_2() { return cCountryAssignment_2; }
		
		//Country
		public RuleCall getCountryCountryParserRuleCall_2_0() { return cCountryCountryParserRuleCall_2_0; }
		
		//("," country+=Country)*
		public Group getGroup_3() { return cGroup_3; }
		
		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//country+=Country
		public Assignment getCountryAssignment_3_1() { return cCountryAssignment_3_1; }
		
		//Country
		public RuleCall getCountryCountryParserRuleCall_3_1_0() { return cCountryCountryParserRuleCall_3_1_0; }
		
		////		'country' '{' country+=Country ( "," country+=Country)* '}'
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Person");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPlayerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPresidentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCoachParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAgentParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Person:
		//	Player | President | Coach | Agent;
		@Override public ParserRule getRule() { return rule; }
		
		//Player | President | Coach | Agent
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Player
		public RuleCall getPlayerParserRuleCall_0() { return cPlayerParserRuleCall_0; }
		
		//President
		public RuleCall getPresidentParserRuleCall_1() { return cPresidentParserRuleCall_1; }
		
		//Coach
		public RuleCall getCoachParserRuleCall_2() { return cCoachParserRuleCall_2; }
		
		//Agent
		public RuleCall getAgentParserRuleCall_3() { return cAgentParserRuleCall_3; }
	}
	public class CountryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Country");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCountryAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCompetitionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCompetitionCompetitionParserRuleCall_3_0 = (RuleCall)cCompetitionAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCompetitionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCompetitionCompetitionParserRuleCall_4_1_0 = (RuleCall)cCompetitionAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Country:
		//	{Country} name=EString
		//	//{
		//	'{'
		//	competition+=Competition ("," competition+=Competition)*
		//	//}
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Country} name=EString //{
		//'{' competition+=Competition ("," competition+=Competition)* //}
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Country}
		public Action getCountryAction_0() { return cCountryAction_0; }
		
		//// 'Country'
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		////{
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//competition+=Competition
		public Assignment getCompetitionAssignment_3() { return cCompetitionAssignment_3; }
		
		//Competition
		public RuleCall getCompetitionCompetitionParserRuleCall_3_0() { return cCompetitionCompetitionParserRuleCall_3_0; }
		
		//("," competition+=Competition)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//competition+=Competition
		public Assignment getCompetitionAssignment_4_1() { return cCompetitionAssignment_4_1; }
		
		//Competition
		public RuleCall getCompetitionCompetitionParserRuleCall_4_1_0() { return cCompetitionCompetitionParserRuleCall_4_1_0; }
		
		////}
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class CompetitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Competition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeCompetitionTypeEnumRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Keyword cTrophyKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTrophyAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTrophyTrophyParserRuleCall_4_0 = (RuleCall)cTrophyAssignment_4.eContents().get(0);
		private final Keyword cTeamKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cTeamAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cTeamTeamParserRuleCall_7_0 = (RuleCall)cTeamAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTeamAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTeamTeamParserRuleCall_8_1_0 = (RuleCall)cTeamAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Competition:
		//	name=EString
		//	'{' ('type' type=CompetitionType)?
		//	'trophy' trophy=Trophy
		//	'team' '{' team+=Team ("," team+=Team)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		////	'Competition'
		//name=EString '{' ('type' type=CompetitionType)? 'trophy' trophy=Trophy 'team' '{' team+=Team ("," team+=Team)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		////	'Competition'
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('type' type=CompetitionType)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'type'
		public Keyword getTypeKeyword_2_0() { return cTypeKeyword_2_0; }
		
		//type=CompetitionType
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//CompetitionType
		public RuleCall getTypeCompetitionTypeEnumRuleCall_2_1_0() { return cTypeCompetitionTypeEnumRuleCall_2_1_0; }
		
		//'trophy'
		public Keyword getTrophyKeyword_3() { return cTrophyKeyword_3; }
		
		//trophy=Trophy
		public Assignment getTrophyAssignment_4() { return cTrophyAssignment_4; }
		
		//Trophy
		public RuleCall getTrophyTrophyParserRuleCall_4_0() { return cTrophyTrophyParserRuleCall_4_0; }
		
		//'team'
		public Keyword getTeamKeyword_5() { return cTeamKeyword_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//team+=Team
		public Assignment getTeamAssignment_7() { return cTeamAssignment_7; }
		
		//Team
		public RuleCall getTeamTeamParserRuleCall_7_0() { return cTeamTeamParserRuleCall_7_0; }
		
		//("," team+=Team)*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//team+=Team
		public Assignment getTeamAssignment_8_1() { return cTeamAssignment_8_1; }
		
		//Team
		public RuleCall getTeamTeamParserRuleCall_8_1_0() { return cTeamTeamParserRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class TrophyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Trophy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTeamKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTeamAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cTeamTeamCrossReference_2_2_0 = (CrossReference)cTeamAssignment_2_2.eContents().get(0);
		private final RuleCall cTeamTeamEStringParserRuleCall_2_2_0_1 = (RuleCall)cTeamTeamCrossReference_2_2_0.eContents().get(1);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Keyword cCommaKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cTeamAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final CrossReference cTeamTeamCrossReference_2_3_1_0 = (CrossReference)cTeamAssignment_2_3_1.eContents().get(0);
		private final RuleCall cTeamTeamEStringParserRuleCall_2_3_1_0_1 = (RuleCall)cTeamTeamCrossReference_2_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Trophy:
		//	name=EString
		//	'{' ('team' '(' team+=[Team|EString] ("," team+=[Team|EString])* ')')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		////	'Trophy'
		//name=EString '{' ('team' '(' team+=[Team|EString] ("," team+=[Team|EString])* ')')? '}'
		public Group getGroup() { return cGroup; }
		
		////	'Trophy'
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('team' '(' team+=[Team|EString] ("," team+=[Team|EString])* ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'team'
		public Keyword getTeamKeyword_2_0() { return cTeamKeyword_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }
		
		//team+=[Team|EString]
		public Assignment getTeamAssignment_2_2() { return cTeamAssignment_2_2; }
		
		//[Team|EString]
		public CrossReference getTeamTeamCrossReference_2_2_0() { return cTeamTeamCrossReference_2_2_0; }
		
		//EString
		public RuleCall getTeamTeamEStringParserRuleCall_2_2_0_1() { return cTeamTeamEStringParserRuleCall_2_2_0_1; }
		
		//("," team+=[Team|EString])*
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//","
		public Keyword getCommaKeyword_2_3_0() { return cCommaKeyword_2_3_0; }
		
		//team+=[Team|EString]
		public Assignment getTeamAssignment_2_3_1() { return cTeamAssignment_2_3_1; }
		
		//[Team|EString]
		public CrossReference getTeamTeamCrossReference_2_3_1_0() { return cTeamTeamCrossReference_2_3_1_0; }
		
		//EString
		public RuleCall getTeamTeamEStringParserRuleCall_2_3_1_0_1() { return cTeamTeamEStringParserRuleCall_2_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_4() { return cRightParenthesisKeyword_2_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class TeamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Team");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeTeamTypeEnumRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Keyword cStadiumKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStadiumAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStadiumStadiumParserRuleCall_4_0 = (RuleCall)cStadiumAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTrophyKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTrophyAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cTrophyTrophyCrossReference_5_2_0 = (CrossReference)cTrophyAssignment_5_2.eContents().get(0);
		private final RuleCall cTrophyTrophyEStringParserRuleCall_5_2_0_1 = (RuleCall)cTrophyTrophyCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cTrophyAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cTrophyTrophyCrossReference_5_3_1_0 = (CrossReference)cTrophyAssignment_5_3_1.eContents().get(0);
		private final RuleCall cTrophyTrophyEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cTrophyTrophyCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cPresidentKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cPresidentAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cPresidentPresidentParserRuleCall_8_0 = (RuleCall)cPresidentAssignment_8.eContents().get(0);
		private final Keyword cCoachKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cCoachAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cCoachCoachParserRuleCall_11_0 = (RuleCall)cCoachAssignment_11.eContents().get(0);
		private final Keyword cPlayerKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cColonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPlayerAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPlayerPlayerParserRuleCall_14_0 = (RuleCall)cPlayerAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cCommaKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cPlayerAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cPlayerPlayerParserRuleCall_15_1_0 = (RuleCall)cPlayerAssignment_15_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		
		//Team:
		//	name=EString
		//	'{' ('type' type=TeamType)?
		//	'stadium' stadium=Stadium ('trophy' '(' trophy+=[Trophy|EString] ("," trophy+=[Trophy|EString])* ')')?
		//	'president' ":" president=President
		//	'coach' ":" coach=Coach
		//	'player' ":" player+=Player ("," player+=Player)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		////	'Team'
		//name=EString '{' ('type' type=TeamType)? 'stadium' stadium=Stadium ('trophy' '(' trophy+=[Trophy|EString] (","
		//trophy+=[Trophy|EString])* ')')? 'president' ":" president=President 'coach' ":" coach=Coach 'player' ":"
		//player+=Player ("," player+=Player)* '}'
		public Group getGroup() { return cGroup; }
		
		////	'Team'
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('type' type=TeamType)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'type'
		public Keyword getTypeKeyword_2_0() { return cTypeKeyword_2_0; }
		
		//type=TeamType
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//TeamType
		public RuleCall getTypeTeamTypeEnumRuleCall_2_1_0() { return cTypeTeamTypeEnumRuleCall_2_1_0; }
		
		//'stadium'
		public Keyword getStadiumKeyword_3() { return cStadiumKeyword_3; }
		
		//stadium=Stadium
		public Assignment getStadiumAssignment_4() { return cStadiumAssignment_4; }
		
		//Stadium
		public RuleCall getStadiumStadiumParserRuleCall_4_0() { return cStadiumStadiumParserRuleCall_4_0; }
		
		//('trophy' '(' trophy+=[Trophy|EString] ("," trophy+=[Trophy|EString])* ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'trophy'
		public Keyword getTrophyKeyword_5_0() { return cTrophyKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//trophy+=[Trophy|EString]
		public Assignment getTrophyAssignment_5_2() { return cTrophyAssignment_5_2; }
		
		//[Trophy|EString]
		public CrossReference getTrophyTrophyCrossReference_5_2_0() { return cTrophyTrophyCrossReference_5_2_0; }
		
		//EString
		public RuleCall getTrophyTrophyEStringParserRuleCall_5_2_0_1() { return cTrophyTrophyEStringParserRuleCall_5_2_0_1; }
		
		//("," trophy+=[Trophy|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//trophy+=[Trophy|EString]
		public Assignment getTrophyAssignment_5_3_1() { return cTrophyAssignment_5_3_1; }
		
		//[Trophy|EString]
		public CrossReference getTrophyTrophyCrossReference_5_3_1_0() { return cTrophyTrophyCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getTrophyTrophyEStringParserRuleCall_5_3_1_0_1() { return cTrophyTrophyEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'president'
		public Keyword getPresidentKeyword_6() { return cPresidentKeyword_6; }
		
		//":"
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//president=President
		public Assignment getPresidentAssignment_8() { return cPresidentAssignment_8; }
		
		//President
		public RuleCall getPresidentPresidentParserRuleCall_8_0() { return cPresidentPresidentParserRuleCall_8_0; }
		
		//'coach'
		public Keyword getCoachKeyword_9() { return cCoachKeyword_9; }
		
		//":"
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//coach=Coach
		public Assignment getCoachAssignment_11() { return cCoachAssignment_11; }
		
		//Coach
		public RuleCall getCoachCoachParserRuleCall_11_0() { return cCoachCoachParserRuleCall_11_0; }
		
		//'player'
		public Keyword getPlayerKeyword_12() { return cPlayerKeyword_12; }
		
		//":"
		public Keyword getColonKeyword_13() { return cColonKeyword_13; }
		
		//player+=Player
		public Assignment getPlayerAssignment_14() { return cPlayerAssignment_14; }
		
		//Player
		public RuleCall getPlayerPlayerParserRuleCall_14_0() { return cPlayerPlayerParserRuleCall_14_0; }
		
		//("," player+=Player)*
		public Group getGroup_15() { return cGroup_15; }
		
		//","
		public Keyword getCommaKeyword_15_0() { return cCommaKeyword_15_0; }
		
		//player+=Player
		public Assignment getPlayerAssignment_15_1() { return cPlayerAssignment_15_1; }
		
		//Player
		public RuleCall getPlayerPlayerParserRuleCall_15_1_0() { return cPlayerPlayerParserRuleCall_15_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
	}
	public class StadiumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Stadium");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStadiumAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCapacityKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCapacityAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCapacityEIntParserRuleCall_3_1_0 = (RuleCall)cCapacityAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Stadium:
		//	{Stadium} name=EString
		//	'{' ('capacity' capacity=EInt)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Stadium} name=EString '{' ('capacity' capacity=EInt)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Stadium}
		public Action getStadiumAction_0() { return cStadiumAction_0; }
		
		////	'Stadium'
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('capacity' capacity=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'capacity'
		public Keyword getCapacityKeyword_3_0() { return cCapacityKeyword_3_0; }
		
		//capacity=EInt
		public Assignment getCapacityAssignment_3_1() { return cCapacityAssignment_3_1; }
		
		//EInt
		public RuleCall getCapacityEIntParserRuleCall_3_1_0() { return cCapacityEIntParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PresidentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.President");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPresidentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPresidentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAgeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAgeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAgeEIntParserRuleCall_4_1_0 = (RuleCall)cAgeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//President:
		//	{President}
		//	'President'
		//	name=EString
		//	'{' ('age' age=EInt)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{President} 'President' name=EString '{' ('age' age=EInt)? '}'
		public Group getGroup() { return cGroup; }
		
		//{President}
		public Action getPresidentAction_0() { return cPresidentAction_0; }
		
		//'President'
		public Keyword getPresidentKeyword_1() { return cPresidentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('age' age=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'age'
		public Keyword getAgeKeyword_4_0() { return cAgeKeyword_4_0; }
		
		//age=EInt
		public Assignment getAgeAssignment_4_1() { return cAgeAssignment_4_1; }
		
		//EInt
		public RuleCall getAgeEIntParserRuleCall_4_1_0() { return cAgeEIntParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class CoachElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Coach");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCoachAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCoachKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAgeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAgeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAgeEIntParserRuleCall_4_1_0 = (RuleCall)cAgeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cContratKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cContratAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cContratEIntParserRuleCall_5_1_0 = (RuleCall)cContratAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAgentKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAgentAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cAgentAgentCrossReference_6_1_0 = (CrossReference)cAgentAssignment_6_1.eContents().get(0);
		private final RuleCall cAgentAgentEStringParserRuleCall_6_1_0_1 = (RuleCall)cAgentAgentCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Coach:
		//	{Coach}
		//	'Coach'
		//	name=EString
		//	'{' ('age' age=EInt)? ('contrat' contrat=EInt)? ('agent' agent=[Agent|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Coach} 'Coach' name=EString '{' ('age' age=EInt)? ('contrat' contrat=EInt)? ('agent' agent=[Agent|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Coach}
		public Action getCoachAction_0() { return cCoachAction_0; }
		
		//'Coach'
		public Keyword getCoachKeyword_1() { return cCoachKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('age' age=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'age'
		public Keyword getAgeKeyword_4_0() { return cAgeKeyword_4_0; }
		
		//age=EInt
		public Assignment getAgeAssignment_4_1() { return cAgeAssignment_4_1; }
		
		//EInt
		public RuleCall getAgeEIntParserRuleCall_4_1_0() { return cAgeEIntParserRuleCall_4_1_0; }
		
		//('contrat' contrat=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'contrat'
		public Keyword getContratKeyword_5_0() { return cContratKeyword_5_0; }
		
		//contrat=EInt
		public Assignment getContratAssignment_5_1() { return cContratAssignment_5_1; }
		
		//EInt
		public RuleCall getContratEIntParserRuleCall_5_1_0() { return cContratEIntParserRuleCall_5_1_0; }
		
		//('agent' agent=[Agent|EString])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'agent'
		public Keyword getAgentKeyword_6_0() { return cAgentKeyword_6_0; }
		
		//agent=[Agent|EString]
		public Assignment getAgentAssignment_6_1() { return cAgentAssignment_6_1; }
		
		//[Agent|EString]
		public CrossReference getAgentAgentCrossReference_6_1_0() { return cAgentAgentCrossReference_6_1_0; }
		
		//EString
		public RuleCall getAgentAgentEStringParserRuleCall_6_1_0_1() { return cAgentAgentEStringParserRuleCall_6_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class PlayerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Player");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPlayerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlayerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAgeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAgeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAgeEIntParserRuleCall_4_1_0 = (RuleCall)cAgeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPositionKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPositionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPositionPlayerPositionEnumRuleCall_5_1_0 = (RuleCall)cPositionAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cStatusKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStatusAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStatusPlayerStatusEnumRuleCall_6_1_0 = (RuleCall)cStatusAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cContratKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cContratAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cContratEIntParserRuleCall_7_1_0 = (RuleCall)cContratAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAgentKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cAgentAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cAgentAgentCrossReference_8_1_0 = (CrossReference)cAgentAssignment_8_1.eContents().get(0);
		private final RuleCall cAgentAgentEStringParserRuleCall_8_1_0_1 = (RuleCall)cAgentAgentCrossReference_8_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Player:
		//	{Player}
		//	'Player'
		//	name=EString
		//	'{' ('age' age=EInt)? ('position' position=PlayerPosition)? ('status' status=PlayerStatus)? ('contrat' contrat=EInt)?
		//	('agent' agent=[Agent|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Player} 'Player' name=EString '{' ('age' age=EInt)? ('position' position=PlayerPosition)? ('status'
		//status=PlayerStatus)? ('contrat' contrat=EInt)? ('agent' agent=[Agent|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Player}
		public Action getPlayerAction_0() { return cPlayerAction_0; }
		
		//'Player'
		public Keyword getPlayerKeyword_1() { return cPlayerKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('age' age=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'age'
		public Keyword getAgeKeyword_4_0() { return cAgeKeyword_4_0; }
		
		//age=EInt
		public Assignment getAgeAssignment_4_1() { return cAgeAssignment_4_1; }
		
		//EInt
		public RuleCall getAgeEIntParserRuleCall_4_1_0() { return cAgeEIntParserRuleCall_4_1_0; }
		
		//('position' position=PlayerPosition)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'position'
		public Keyword getPositionKeyword_5_0() { return cPositionKeyword_5_0; }
		
		//position=PlayerPosition
		public Assignment getPositionAssignment_5_1() { return cPositionAssignment_5_1; }
		
		//PlayerPosition
		public RuleCall getPositionPlayerPositionEnumRuleCall_5_1_0() { return cPositionPlayerPositionEnumRuleCall_5_1_0; }
		
		//('status' status=PlayerStatus)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'status'
		public Keyword getStatusKeyword_6_0() { return cStatusKeyword_6_0; }
		
		//status=PlayerStatus
		public Assignment getStatusAssignment_6_1() { return cStatusAssignment_6_1; }
		
		//PlayerStatus
		public RuleCall getStatusPlayerStatusEnumRuleCall_6_1_0() { return cStatusPlayerStatusEnumRuleCall_6_1_0; }
		
		//('contrat' contrat=EInt)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'contrat'
		public Keyword getContratKeyword_7_0() { return cContratKeyword_7_0; }
		
		//contrat=EInt
		public Assignment getContratAssignment_7_1() { return cContratAssignment_7_1; }
		
		//EInt
		public RuleCall getContratEIntParserRuleCall_7_1_0() { return cContratEIntParserRuleCall_7_1_0; }
		
		//('agent' agent=[Agent|EString])?
		public Group getGroup_8() { return cGroup_8; }
		
		//'agent'
		public Keyword getAgentKeyword_8_0() { return cAgentKeyword_8_0; }
		
		//agent=[Agent|EString]
		public Assignment getAgentAssignment_8_1() { return cAgentAssignment_8_1; }
		
		//[Agent|EString]
		public CrossReference getAgentAgentCrossReference_8_1_0() { return cAgentAgentCrossReference_8_1_0; }
		
		//EString
		public RuleCall getAgentAgentEStringParserRuleCall_8_1_0_1() { return cAgentAgentEStringParserRuleCall_8_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAgentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAgentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAgeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAgeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAgeEIntParserRuleCall_4_1_0 = (RuleCall)cAgeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPlayerKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPlayerAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cPlayerPlayerCrossReference_5_2_0 = (CrossReference)cPlayerAssignment_5_2.eContents().get(0);
		private final RuleCall cPlayerPlayerEStringParserRuleCall_5_2_0_1 = (RuleCall)cPlayerPlayerCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPlayerAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cPlayerPlayerCrossReference_5_3_1_0 = (CrossReference)cPlayerAssignment_5_3_1.eContents().get(0);
		private final RuleCall cPlayerPlayerEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cPlayerPlayerCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCoachKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cCoachAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cCoachCoachCrossReference_6_2_0 = (CrossReference)cCoachAssignment_6_2.eContents().get(0);
		private final RuleCall cCoachCoachEStringParserRuleCall_6_2_0_1 = (RuleCall)cCoachCoachCrossReference_6_2_0.eContents().get(1);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cCoachAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final CrossReference cCoachCoachCrossReference_6_3_1_0 = (CrossReference)cCoachAssignment_6_3_1.eContents().get(0);
		private final RuleCall cCoachCoachEStringParserRuleCall_6_3_1_0_1 = (RuleCall)cCoachCoachCrossReference_6_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Agent:
		//	{Agent}
		//	'Agent'
		//	name=EString
		//	'{' ('age' age=EInt)? ('player' '(' player+=[Player|EString] ("," player+=[Player|EString])* ')')? ('coach' '('
		//	coach+=[Coach|EString] ("," coach+=[Coach|EString])* ')')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Agent} 'Agent' name=EString '{' ('age' age=EInt)? ('player' '(' player+=[Player|EString] (","
		//player+=[Player|EString])* ')')? ('coach' '(' coach+=[Coach|EString] ("," coach+=[Coach|EString])* ')')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Agent}
		public Action getAgentAction_0() { return cAgentAction_0; }
		
		//'Agent'
		public Keyword getAgentKeyword_1() { return cAgentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('age' age=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'age'
		public Keyword getAgeKeyword_4_0() { return cAgeKeyword_4_0; }
		
		//age=EInt
		public Assignment getAgeAssignment_4_1() { return cAgeAssignment_4_1; }
		
		//EInt
		public RuleCall getAgeEIntParserRuleCall_4_1_0() { return cAgeEIntParserRuleCall_4_1_0; }
		
		//('player' '(' player+=[Player|EString] ("," player+=[Player|EString])* ')')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'player'
		public Keyword getPlayerKeyword_5_0() { return cPlayerKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//player+=[Player|EString]
		public Assignment getPlayerAssignment_5_2() { return cPlayerAssignment_5_2; }
		
		//[Player|EString]
		public CrossReference getPlayerPlayerCrossReference_5_2_0() { return cPlayerPlayerCrossReference_5_2_0; }
		
		//EString
		public RuleCall getPlayerPlayerEStringParserRuleCall_5_2_0_1() { return cPlayerPlayerEStringParserRuleCall_5_2_0_1; }
		
		//("," player+=[Player|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//player+=[Player|EString]
		public Assignment getPlayerAssignment_5_3_1() { return cPlayerAssignment_5_3_1; }
		
		//[Player|EString]
		public CrossReference getPlayerPlayerCrossReference_5_3_1_0() { return cPlayerPlayerCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getPlayerPlayerEStringParserRuleCall_5_3_1_0_1() { return cPlayerPlayerEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//('coach' '(' coach+=[Coach|EString] ("," coach+=[Coach|EString])* ')')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'coach'
		public Keyword getCoachKeyword_6_0() { return cCoachKeyword_6_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6_1() { return cLeftParenthesisKeyword_6_1; }
		
		//coach+=[Coach|EString]
		public Assignment getCoachAssignment_6_2() { return cCoachAssignment_6_2; }
		
		//[Coach|EString]
		public CrossReference getCoachCoachCrossReference_6_2_0() { return cCoachCoachCrossReference_6_2_0; }
		
		//EString
		public RuleCall getCoachCoachEStringParserRuleCall_6_2_0_1() { return cCoachCoachEStringParserRuleCall_6_2_0_1; }
		
		//("," coach+=[Coach|EString])*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//coach+=[Coach|EString]
		public Assignment getCoachAssignment_6_3_1() { return cCoachAssignment_6_3_1; }
		
		//[Coach|EString]
		public CrossReference getCoachCoachCrossReference_6_3_1_0() { return cCoachCoachCrossReference_6_3_1_0; }
		
		//EString
		public RuleCall getCoachCoachEStringParserRuleCall_6_3_1_0_1() { return cCoachCoachEStringParserRuleCall_6_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6_4() { return cRightParenthesisKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	public class CompetitionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.CompetitionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cChampionshipEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cChampionshipChampionshipKeyword_0_0 = (Keyword)cChampionshipEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCupEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCupCupKeyword_1_0 = (Keyword)cCupEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWorldCupEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWorldCupWorldCupKeyword_2_0 = (Keyword)cWorldCupEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CompetitionType:
		//	championship | cup | worldCup;
		public EnumRule getRule() { return rule; }
		
		//championship | cup | worldCup
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//championship
		public EnumLiteralDeclaration getChampionshipEnumLiteralDeclaration_0() { return cChampionshipEnumLiteralDeclaration_0; }
		
		//'championship'
		public Keyword getChampionshipChampionshipKeyword_0_0() { return cChampionshipChampionshipKeyword_0_0; }
		
		//cup
		public EnumLiteralDeclaration getCupEnumLiteralDeclaration_1() { return cCupEnumLiteralDeclaration_1; }
		
		//'cup'
		public Keyword getCupCupKeyword_1_0() { return cCupCupKeyword_1_0; }
		
		//worldCup
		public EnumLiteralDeclaration getWorldCupEnumLiteralDeclaration_2() { return cWorldCupEnumLiteralDeclaration_2; }
		
		//'worldCup'
		public Keyword getWorldCupWorldCupKeyword_2_0() { return cWorldCupWorldCupKeyword_2_0; }
	}
	public class TeamTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.TeamType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTownEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTownTownKeyword_0_0 = (Keyword)cTownEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNationalEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNationalNationalKeyword_1_0 = (Keyword)cNationalEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TeamType:
		//	town | national;
		public EnumRule getRule() { return rule; }
		
		//town | national
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//town
		public EnumLiteralDeclaration getTownEnumLiteralDeclaration_0() { return cTownEnumLiteralDeclaration_0; }
		
		//'town'
		public Keyword getTownTownKeyword_0_0() { return cTownTownKeyword_0_0; }
		
		//national
		public EnumLiteralDeclaration getNationalEnumLiteralDeclaration_1() { return cNationalEnumLiteralDeclaration_1; }
		
		//'national'
		public Keyword getNationalNationalKeyword_1_0() { return cNationalNationalKeyword_1_0; }
	}
	public class PlayerPositionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.PlayerPosition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCentralMidfielderEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCentralMidfielderCentralMidfielderKeyword_0_0 = (Keyword)cCentralMidfielderEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCentralBackEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCentralBackCentralBackKeyword_1_0 = (Keyword)cCentralBackEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cGoalKeeperEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cGoalKeeperGoalKeeperKeyword_2_0 = (Keyword)cGoalKeeperEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLeftMidfielderEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLeftMidfielderLeftMidfielderKeyword_3_0 = (Keyword)cLeftMidfielderEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cRightMidfielderEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cRightMidfielderRightMidfielderKeyword_4_0 = (Keyword)cRightMidfielderEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cRightBackEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cRightBackRightBackKeyword_5_0 = (Keyword)cRightBackEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cLeftBackEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cLeftBackLeftBackKeyword_6_0 = (Keyword)cLeftBackEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cStrikerEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cStrikerStrikerKeyword_7_0 = (Keyword)cStrikerEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum PlayerPosition:
		//	centralMidfielder | centralBack | goalKeeper | leftMidfielder | rightMidfielder | rightBack | leftBack | striker;
		public EnumRule getRule() { return rule; }
		
		//centralMidfielder | centralBack | goalKeeper | leftMidfielder | rightMidfielder | rightBack | leftBack | striker
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//centralMidfielder
		public EnumLiteralDeclaration getCentralMidfielderEnumLiteralDeclaration_0() { return cCentralMidfielderEnumLiteralDeclaration_0; }
		
		//'centralMidfielder'
		public Keyword getCentralMidfielderCentralMidfielderKeyword_0_0() { return cCentralMidfielderCentralMidfielderKeyword_0_0; }
		
		//centralBack
		public EnumLiteralDeclaration getCentralBackEnumLiteralDeclaration_1() { return cCentralBackEnumLiteralDeclaration_1; }
		
		//'centralBack'
		public Keyword getCentralBackCentralBackKeyword_1_0() { return cCentralBackCentralBackKeyword_1_0; }
		
		//goalKeeper
		public EnumLiteralDeclaration getGoalKeeperEnumLiteralDeclaration_2() { return cGoalKeeperEnumLiteralDeclaration_2; }
		
		//'goalKeeper'
		public Keyword getGoalKeeperGoalKeeperKeyword_2_0() { return cGoalKeeperGoalKeeperKeyword_2_0; }
		
		//leftMidfielder
		public EnumLiteralDeclaration getLeftMidfielderEnumLiteralDeclaration_3() { return cLeftMidfielderEnumLiteralDeclaration_3; }
		
		//'leftMidfielder'
		public Keyword getLeftMidfielderLeftMidfielderKeyword_3_0() { return cLeftMidfielderLeftMidfielderKeyword_3_0; }
		
		//rightMidfielder
		public EnumLiteralDeclaration getRightMidfielderEnumLiteralDeclaration_4() { return cRightMidfielderEnumLiteralDeclaration_4; }
		
		//'rightMidfielder'
		public Keyword getRightMidfielderRightMidfielderKeyword_4_0() { return cRightMidfielderRightMidfielderKeyword_4_0; }
		
		//rightBack
		public EnumLiteralDeclaration getRightBackEnumLiteralDeclaration_5() { return cRightBackEnumLiteralDeclaration_5; }
		
		//'rightBack'
		public Keyword getRightBackRightBackKeyword_5_0() { return cRightBackRightBackKeyword_5_0; }
		
		//leftBack
		public EnumLiteralDeclaration getLeftBackEnumLiteralDeclaration_6() { return cLeftBackEnumLiteralDeclaration_6; }
		
		//'leftBack'
		public Keyword getLeftBackLeftBackKeyword_6_0() { return cLeftBackLeftBackKeyword_6_0; }
		
		//striker
		public EnumLiteralDeclaration getStrikerEnumLiteralDeclaration_7() { return cStrikerEnumLiteralDeclaration_7; }
		
		//'striker'
		public Keyword getStrikerStrikerKeyword_7_0() { return cStrikerStrikerKeyword_7_0; }
	}
	public class PlayerStatusElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "championsProject.XText.PlayerStatus");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStarterEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStarterStarterKeyword_0_0 = (Keyword)cStarterEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSubstituteEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSubstituteSubstituteKeyword_1_0 = (Keyword)cSubstituteEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInjuredEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInjuredInjuredKeyword_2_0 = (Keyword)cInjuredEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSuspendedEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSuspendedSuspendedKeyword_3_0 = (Keyword)cSuspendedEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum PlayerStatus:
		//	starter | substitute | injured | suspended;
		public EnumRule getRule() { return rule; }
		
		//starter | substitute | injured | suspended
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//starter
		public EnumLiteralDeclaration getStarterEnumLiteralDeclaration_0() { return cStarterEnumLiteralDeclaration_0; }
		
		//'starter'
		public Keyword getStarterStarterKeyword_0_0() { return cStarterStarterKeyword_0_0; }
		
		//substitute
		public EnumLiteralDeclaration getSubstituteEnumLiteralDeclaration_1() { return cSubstituteEnumLiteralDeclaration_1; }
		
		//'substitute'
		public Keyword getSubstituteSubstituteKeyword_1_0() { return cSubstituteSubstituteKeyword_1_0; }
		
		//injured
		public EnumLiteralDeclaration getInjuredEnumLiteralDeclaration_2() { return cInjuredEnumLiteralDeclaration_2; }
		
		//'injured'
		public Keyword getInjuredInjuredKeyword_2_0() { return cInjuredInjuredKeyword_2_0; }
		
		//suspended
		public EnumLiteralDeclaration getSuspendedEnumLiteralDeclaration_3() { return cSuspendedEnumLiteralDeclaration_3; }
		
		//'suspended'
		public Keyword getSuspendedSuspendedKeyword_3_0() { return cSuspendedSuspendedKeyword_3_0; }
	}
	
	private final FifaElements pFifa;
	private final PersonElements pPerson;
	private final CountryElements pCountry;
	private final EStringElements pEString;
	private final CompetitionElements pCompetition;
	private final TrophyElements pTrophy;
	private final CompetitionTypeElements eCompetitionType;
	private final TeamElements pTeam;
	private final StadiumElements pStadium;
	private final TeamTypeElements eTeamType;
	private final PresidentElements pPresident;
	private final CoachElements pCoach;
	private final PlayerElements pPlayer;
	private final EIntElements pEInt;
	private final AgentElements pAgent;
	private final PlayerPositionElements ePlayerPosition;
	private final PlayerStatusElements ePlayerStatus;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public XTextGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pFifa = new FifaElements();
		this.pPerson = new PersonElements();
		this.pCountry = new CountryElements();
		this.pEString = new EStringElements();
		this.pCompetition = new CompetitionElements();
		this.pTrophy = new TrophyElements();
		this.eCompetitionType = new CompetitionTypeElements();
		this.pTeam = new TeamElements();
		this.pStadium = new StadiumElements();
		this.eTeamType = new TeamTypeElements();
		this.pPresident = new PresidentElements();
		this.pCoach = new CoachElements();
		this.pPlayer = new PlayerElements();
		this.pEInt = new EIntElements();
		this.pAgent = new AgentElements();
		this.ePlayerPosition = new PlayerPositionElements();
		this.ePlayerStatus = new PlayerStatusElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("championsProject.XText".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Fifa:
	//	'Fifa'
	//	'{'
	//	country+=Country ("," country+=Country)*
	//	//		'country' '{' country+=Country ( "," country+=Country)* '}'
	//	'}';
	public FifaElements getFifaAccess() {
		return pFifa;
	}
	
	public ParserRule getFifaRule() {
		return getFifaAccess().getRule();
	}
	
	//Person:
	//	Player | President | Coach | Agent;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//Country:
	//	{Country} name=EString
	//	//{
	//	'{'
	//	competition+=Competition ("," competition+=Competition)*
	//	//}
	//	'}';
	public CountryElements getCountryAccess() {
		return pCountry;
	}
	
	public ParserRule getCountryRule() {
		return getCountryAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Competition:
	//	name=EString
	//	'{' ('type' type=CompetitionType)?
	//	'trophy' trophy=Trophy
	//	'team' '{' team+=Team ("," team+=Team)* '}'
	//	'}';
	public CompetitionElements getCompetitionAccess() {
		return pCompetition;
	}
	
	public ParserRule getCompetitionRule() {
		return getCompetitionAccess().getRule();
	}
	
	//Trophy:
	//	name=EString
	//	'{' ('team' '(' team+=[Team|EString] ("," team+=[Team|EString])* ')')?
	//	'}';
	public TrophyElements getTrophyAccess() {
		return pTrophy;
	}
	
	public ParserRule getTrophyRule() {
		return getTrophyAccess().getRule();
	}
	
	//enum CompetitionType:
	//	championship | cup | worldCup;
	public CompetitionTypeElements getCompetitionTypeAccess() {
		return eCompetitionType;
	}
	
	public EnumRule getCompetitionTypeRule() {
		return getCompetitionTypeAccess().getRule();
	}
	
	//Team:
	//	name=EString
	//	'{' ('type' type=TeamType)?
	//	'stadium' stadium=Stadium ('trophy' '(' trophy+=[Trophy|EString] ("," trophy+=[Trophy|EString])* ')')?
	//	'president' ":" president=President
	//	'coach' ":" coach=Coach
	//	'player' ":" player+=Player ("," player+=Player)*
	//	'}';
	public TeamElements getTeamAccess() {
		return pTeam;
	}
	
	public ParserRule getTeamRule() {
		return getTeamAccess().getRule();
	}
	
	//Stadium:
	//	{Stadium} name=EString
	//	'{' ('capacity' capacity=EInt)?
	//	'}';
	public StadiumElements getStadiumAccess() {
		return pStadium;
	}
	
	public ParserRule getStadiumRule() {
		return getStadiumAccess().getRule();
	}
	
	//enum TeamType:
	//	town | national;
	public TeamTypeElements getTeamTypeAccess() {
		return eTeamType;
	}
	
	public EnumRule getTeamTypeRule() {
		return getTeamTypeAccess().getRule();
	}
	
	//President:
	//	{President}
	//	'President'
	//	name=EString
	//	'{' ('age' age=EInt)?
	//	'}';
	public PresidentElements getPresidentAccess() {
		return pPresident;
	}
	
	public ParserRule getPresidentRule() {
		return getPresidentAccess().getRule();
	}
	
	//Coach:
	//	{Coach}
	//	'Coach'
	//	name=EString
	//	'{' ('age' age=EInt)? ('contrat' contrat=EInt)? ('agent' agent=[Agent|EString])?
	//	'}';
	public CoachElements getCoachAccess() {
		return pCoach;
	}
	
	public ParserRule getCoachRule() {
		return getCoachAccess().getRule();
	}
	
	//Player:
	//	{Player}
	//	'Player'
	//	name=EString
	//	'{' ('age' age=EInt)? ('position' position=PlayerPosition)? ('status' status=PlayerStatus)? ('contrat' contrat=EInt)?
	//	('agent' agent=[Agent|EString])?
	//	'}';
	public PlayerElements getPlayerAccess() {
		return pPlayer;
	}
	
	public ParserRule getPlayerRule() {
		return getPlayerAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Agent:
	//	{Agent}
	//	'Agent'
	//	name=EString
	//	'{' ('age' age=EInt)? ('player' '(' player+=[Player|EString] ("," player+=[Player|EString])* ')')? ('coach' '('
	//	coach+=[Coach|EString] ("," coach+=[Coach|EString])* ')')?
	//	'}';
	public AgentElements getAgentAccess() {
		return pAgent;
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}
	
	//enum PlayerPosition:
	//	centralMidfielder | centralBack | goalKeeper | leftMidfielder | rightMidfielder | rightBack | leftBack | striker;
	public PlayerPositionElements getPlayerPositionAccess() {
		return ePlayerPosition;
	}
	
	public EnumRule getPlayerPositionRule() {
		return getPlayerPositionAccess().getRule();
	}
	
	//enum PlayerStatus:
	//	starter | substitute | injured | suspended;
	public PlayerStatusElements getPlayerStatusAccess() {
		return ePlayerStatus;
	}
	
	public EnumRule getPlayerStatusRule() {
		return getPlayerStatusAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
